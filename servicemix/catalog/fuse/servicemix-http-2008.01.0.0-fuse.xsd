<?xml version='1.0'?>
<!-- NOTE: this file is autogenerated by Apache XBean -->

<xs:schema elementFormDefault='qualified'
           targetNamespace='http://servicemix.apache.org/http/1.0'
           xmlns:xs='http://www.w3.org/2001/XMLSchema'
           xmlns:tns='http://servicemix.apache.org/http/1.0'>

  <!-- element for type: org.apache.servicemix.http.BasicAuthCredentials -->
  <xs:element name='basicAuthCredentials'>
    <xs:annotation>
      <xs:documentation><![CDATA[
        This class contains parameters needed to send basic authentication credentials
      ]]></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name='password' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the password to use for authentication
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='username' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the username to use for authentication
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


  <!-- element for type: org.apache.servicemix.http.HttpComponent -->
  <xs:element name='component'>
    <xs:annotation>
      <xs:documentation><![CDATA[
        an HTTP JBI component. The component is responsible for hosting HTTP endpoints.
      ]]></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name='authenticationService' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              the authentication service object used by a component
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='client' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              the Apache Commons HTTP client used by a component
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='configuration' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              the HTTP configuration information used to establish HTTP connections
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:choice minOccurs='0' maxOccurs='1'>
              <xs:element ref='tns:configuration'/>
              <xs:any namespace='##other'/>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:element name='connectionPool' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              a Jetty HTTP client instance maintaining a thread pool for client-side connections
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='endpoints' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              the endpoints hosted by a component
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:choice minOccurs='0' maxOccurs='unbounded'>
              <xs:element ref='tns:consumer'/>
              <xs:element ref='tns:endpoint'/>
              <xs:element ref='tns:provider'/>
              <xs:element ref='tns:soap-consumer'/>
              <xs:element ref='tns:soap-provider'/>
              <xs:any namespace='##other'/>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:element name='executor' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='executorFactory' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='keystoreManager' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              the keystore manager object used by a component
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='server' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:any namespace='##other' minOccurs='0' maxOccurs='unbounded'/>
      </xs:sequence>
      <xs:attribute name='authenticationService' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the authentication service object used by a component
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='client' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the Apache Commons HTTP client used by a component
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='configuration' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the HTTP configuration information used to establish HTTP connections
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='connectionPool' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            a Jetty HTTP client instance maintaining a thread pool for client-side connections
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='executor' type='xs:string'/>
      <xs:attribute name='executorFactory' type='xs:string'/>
      <xs:attribute name='host' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the host name
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='keystoreManager' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the keystore manager object used by a component
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='path' type='xs:string'/>
      <xs:attribute name='port' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the port number. The default is 80.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='protocol' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the protocol being used. Valid values are <code>http:</code> and <code>https:</code>
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='server' type='xs:string'/>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


  <!-- element for type: org.apache.servicemix.http.HttpConfiguration -->
  <xs:element name='configuration'>
    <xs:annotation>
      <xs:documentation><![CDATA[
        configuration for the Jetty instance used by an HTTP endpoint
      ]]></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name='authenticationService' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              the authentication service object. This property takes precedence over
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='keystoreManager' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              the keystore object. This property takes precedence over
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:any namespace='##other' minOccurs='0' maxOccurs='unbounded'/>
      </xs:sequence>
      <xs:attribute name='authenticationService' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the authentication service object. This property takes precedence over
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='authenticationServiceName' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the JNDI name of the authentication service object. The default is java:comp/env/smx/AuthenticationService.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='connectorMaxIdleTime' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the number of miliseconds a connection will be idle before timing out. The default is 30000.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='consumerProcessorSuspendTime' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the number of miliseconds Jetty will susspend the processing of a request. The default is 60000.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='jettyClientPerProvider' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if HTTP provider endpoints share a Jetty client or use per-endpoint Jetty clients. The default setting is
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='jettyClientThreadPoolSize' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the maximum number of threads in the client-side threadpool. The default setting is 16.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='jettyConnectorClassName' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the classname of the Jetty connector used by the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='jettyManagement' type='xs:boolean'/>
      <xs:attribute name='jettyThreadPoolSize' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the maximum number of threads in the server-side threadpool. The default setting is 255.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='keystoreManager' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the keystore object. This property takes precedence over
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='keystoreManagerName' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the JNDI name of the keystore manager object. The default is java:comp/env/smx/KeystoreManager.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='managed' type='xs:boolean'/>
      <xs:attribute name='mapping' type='xs:string'/>
      <xs:attribute name='maxConnectionsPerHost' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the maximum number of concurent connections allowed from a host. The default is 65536.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='maxTotalConnections' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the maximum number of total concurent connections allowed to an endpoint. The default is 65536.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='proxyHost' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the default proxy host name used to send requests. This can be overridden by each endpoint.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='proxyPort' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the default proxy port used to send requests. This can be overridden by each endpoint.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='retryCount' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the number of times a request will be attempted without succees before an error is created. The default is 3. If streaming is enabled, the value will always be 0.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='streamingEnabled' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if client-side requests use HTTP streaming.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='wantHeadersFromHttpIntoExchange' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the HTTP provider will copy the HTTP request headers into the JBI exchange. The default is
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


  <!-- element for type: org.apache.servicemix.http.endpoints.HttpConsumerEndpoint -->
  <xs:element name='consumer'>
    <xs:annotation>
      <xs:documentation><![CDATA[
        Plain HTTP consumer endpoint. This endpoint can be used to handle plain HTTP request (without SOAP) or to be able to
process the request in a non standard way. For HTTP requests, a WSDL2 HTTP binding can be used.
      ]]></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name='component' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:choice minOccurs='0' maxOccurs='1'>
              <xs:element ref='tns:component'/>
              <xs:any namespace='##other'/>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:element name='definition' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='description' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='marshaler' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              the bean used to marshal HTTP messages. The default is a
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:choice minOccurs='0' maxOccurs='1'>
              <xs:element ref='tns:serializedMarshaler'/>
              <xs:any namespace='##other'/>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:element name='serviceUnit' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='ssl' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              a bean containing the SSL configuration properties
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:choice minOccurs='0' maxOccurs='1'>
              <xs:element ref='tns:sslParameters'/>
              <xs:any namespace='##other'/>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:any namespace='##other' minOccurs='0' maxOccurs='unbounded'/>
      </xs:sequence>
      <xs:attribute name='authMethod' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            a string naming the scheme used for authenticating users
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='component' type='xs:string'/>
      <xs:attribute name='defaultMep' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            a URI representing the endpoint's default MEP. The default is
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='definition' type='xs:string'/>
      <xs:attribute name='description' type='xs:string'/>
      <xs:attribute name='endpoint' type='xs:string'/>
      <xs:attribute name='interfaceName' type='xs:QName'/>
      <xs:attribute name='locationURI' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the URI at which the endpoint listens for requests
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='marshaler' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the bean used to marshal HTTP messages. The default is a
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='service' type='xs:QName'/>
      <xs:attribute name='serviceUnit' type='xs:string'/>
      <xs:attribute name='ssl' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            a bean containing the SSL configuration properties
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='targetEndpoint' type='xs:string'/>
      <xs:attribute name='targetInterface' type='xs:QName'/>
      <xs:attribute name='targetOperation' type='xs:QName'/>
      <xs:attribute name='targetService' type='xs:QName'/>
      <xs:attribute name='targetUri' type='xs:string'/>
      <xs:attribute name='timeout' type='xs:long'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the timeout is specified in milliseconds. The default value is 0 which
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


  <!-- element for type: org.apache.servicemix.http.HttpEndpoint -->
  <xs:element name='endpoint'>
    <xs:annotation>
      <xs:documentation><![CDATA[
        the base element for all HTTP endpoints
      ]]></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name='basicAuthentication' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              authentication data for using basic HTTP authentication.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:choice minOccurs='0' maxOccurs='1'>
              <xs:element ref='tns:basicAuthCredentials'/>
              <xs:any namespace='##other'/>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:element name='binding' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='definition' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='description' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='policies' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='unbounded'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='proxy' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              configuration used to establish a proxy for sending HTTP requests. This configuration overrides that which is set at the component level.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:choice minOccurs='0' maxOccurs='1'>
              <xs:element ref='tns:proxyParameters'/>
              <xs:any namespace='##other'/>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:element name='serviceUnit' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='ssl' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              a bean containing the SSL configuration properties
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:choice minOccurs='0' maxOccurs='1'>
              <xs:element ref='tns:sslParameters'/>
              <xs:any namespace='##other'/>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:element name='wsdlResource' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:any namespace='##other' minOccurs='0' maxOccurs='unbounded'/>
      </xs:sequence>
      <xs:attribute name='authMethod' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            a string naming the scheme used for authenticating users
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='basicAuthentication' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            authentication data for using basic HTTP authentication.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='binding' type='xs:string'/>
      <xs:attribute name='defaultMep' type='xs:string'/>
      <xs:attribute name='defaultOperation' type='xs:QName'/>
      <xs:attribute name='definition' type='xs:string'/>
      <xs:attribute name='description' type='xs:string'/>
      <xs:attribute name='dynamic' type='xs:boolean'/>
      <xs:attribute name='endpoint' type='xs:string'/>
      <xs:attribute name='interfaceName' type='xs:QName'/>
      <xs:attribute name='locationURI' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the URI to which a provider endpoint sends requests
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='proxy' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            configuration used to establish a proxy for sending HTTP requests. This configuration overrides that which is set at the component level.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='role' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            HTTP endpoints can be either consumers or providers. Specifying
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='roleAsString' type='xs:string'/>
      <xs:attribute name='service' type='xs:QName'/>
      <xs:attribute name='serviceUnit' type='xs:string'/>
      <xs:attribute name='soap' type='xs:boolean'/>
      <xs:attribute name='soapAction' type='xs:string'/>
      <xs:attribute name='soapVersion' type='xs:string'/>
      <xs:attribute name='ssl' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            a bean containing the SSL configuration properties
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='synchronous' type='xs:boolean'/>
      <xs:attribute name='targetEndpoint' type='xs:string'/>
      <xs:attribute name='targetInterfaceName' type='xs:QName'/>
      <xs:attribute name='targetService' type='xs:QName'/>
      <xs:attribute name='timeout' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the number of milliseconds before the endpoint times out. The default value is 0 which means that the endpoint will never timeout.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='wantContentTypeHeaderFromExchangeIntoHttpRequest' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the HTTP provider will copy the HTTP request headers into the JBI
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='wsdlResource' type='xs:string'/>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


  <!-- element for type: org.apache.servicemix.http.endpoints.HttpProviderEndpoint -->
  <xs:element name='provider'>
    <xs:annotation>
      <xs:documentation><![CDATA[
        A plain HTTP provider. This type of endpoint can be used to send non-SOAP requests to HTTP endpoints.
      ]]></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name='component' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:choice minOccurs='0' maxOccurs='1'>
              <xs:element ref='tns:component'/>
              <xs:any namespace='##other'/>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:element name='definition' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='description' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='marshaler' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              the bean used to marshal HTTP messages. The default is a
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='serviceUnit' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='ssl' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              the SSL parameters
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:choice minOccurs='0' maxOccurs='1'>
              <xs:element ref='tns:sslParameters'/>
              <xs:any namespace='##other'/>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:any namespace='##other' minOccurs='0' maxOccurs='unbounded'/>
      </xs:sequence>
      <xs:attribute name='clientSoTimeout' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the number of milliseconds the endpoint will block while attempting to read a request. The default value is 60000. Setting this to 0 specifies that the endpoint will never timeout.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='component' type='xs:string'/>
      <xs:attribute name='definition' type='xs:string'/>
      <xs:attribute name='description' type='xs:string'/>
      <xs:attribute name='endpoint' type='xs:string'/>
      <xs:attribute name='interfaceName' type='xs:QName'/>
      <xs:attribute name='locationURI' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the URI to which the endpoint sends requests
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='marshaler' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the bean used to marshal HTTP messages. The default is a
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='proxyHost' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the host name of the HTTP proxy
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='proxyPassword' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the password for the HTTP proxy authentication
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='proxyPort' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the host port of the HTTP proxy (defaults to 80)
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='proxyUsername' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the user name for the HTTP proxy authentication
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='service' type='xs:QName'/>
      <xs:attribute name='serviceUnit' type='xs:string'/>
      <xs:attribute name='ssl' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the SSL parameters
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


  <!-- element for type: org.apache.servicemix.http.ProxyParameters -->
  <xs:element name='proxyParameters'>
    <xs:annotation>
      <xs:documentation><![CDATA[
        parameters needed to send HTTP requests through a proxy
      ]]></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name='proxyCredentials' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              authentication data for using basic HTTP authentication.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:choice minOccurs='0' maxOccurs='1'>
              <xs:element ref='tns:basicAuthCredentials'/>
              <xs:any namespace='##other'/>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:any namespace='##other' minOccurs='0' maxOccurs='unbounded'/>
      </xs:sequence>
      <xs:attribute name='proxyCredentials' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            authentication data for using basic HTTP authentication.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='proxyHost' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the proxy's host name
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='proxyPort' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the proxy's port number
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


  <!-- element for type: org.apache.servicemix.http.endpoints.SerializedMarshaler -->
  <xs:element name='serializedMarshaler'>
    <xs:annotation>
      <xs:documentation><![CDATA[
        a consumer-side marshaler for handling Java serialized content
      ]]></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name='defaultMep' type='xs:string'/>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


  <!-- element for type: org.apache.servicemix.http.endpoints.HttpSoapConsumerEndpoint -->
  <xs:element name='soap-consumer'>
    <xs:annotation>
      <xs:documentation><![CDATA[
        an HTTP consumer endpoint that is optimized to work with SOAP messages
      ]]></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name='component' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:choice minOccurs='0' maxOccurs='1'>
              <xs:element ref='tns:component'/>
              <xs:any namespace='##other'/>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:element name='definition' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='description' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='marshaler' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              the bean used to marshal HTTP messages. The default is a
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:choice minOccurs='0' maxOccurs='1'>
              <xs:element ref='tns:serializedMarshaler'/>
              <xs:any namespace='##other'/>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:element name='policies' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              a list of interceptors that will process messages
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='unbounded'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='serviceUnit' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='ssl' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              a bean containing the SSL configuration properties
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:choice minOccurs='0' maxOccurs='1'>
              <xs:element ref='tns:sslParameters'/>
              <xs:any namespace='##other'/>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:element name='wsdl' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              the URL of the WSDL document defining the endpoint's messages
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:any namespace='##other' minOccurs='0' maxOccurs='unbounded'/>
      </xs:sequence>
      <xs:attribute name='authMethod' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            a string naming the scheme used for authenticating users
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='component' type='xs:string'/>
      <xs:attribute name='defaultMep' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            a URI representing the endpoint's default MEP. The default is
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='definition' type='xs:string'/>
      <xs:attribute name='description' type='xs:string'/>
      <xs:attribute name='endpoint' type='xs:string'/>
      <xs:attribute name='interfaceName' type='xs:QName'/>
      <xs:attribute name='locationURI' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the URI at which the endpoint listens for requests
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='marshaler' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the bean used to marshal HTTP messages. The default is a
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='service' type='xs:QName'/>
      <xs:attribute name='serviceUnit' type='xs:string'/>
      <xs:attribute name='ssl' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            a bean containing the SSL configuration properties
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='targetEndpoint' type='xs:string'/>
      <xs:attribute name='targetInterface' type='xs:QName'/>
      <xs:attribute name='targetOperation' type='xs:QName'/>
      <xs:attribute name='targetService' type='xs:QName'/>
      <xs:attribute name='targetUri' type='xs:string'/>
      <xs:attribute name='timeout' type='xs:long'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the timeout is specified in milliseconds. The default value is 0 which
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='useJbiWrapper' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the JBI wrapper is sent in the body of the message. Default is
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='validateWsdl' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the WSDL is checked for WSI-BP compliance. Default is <code>true</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='wsdl' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the URL of the WSDL document defining the endpoint's messages
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


  <!-- element for type: org.apache.servicemix.http.endpoints.HttpSoapProviderEndpoint -->
  <xs:element name='soap-provider'>
    <xs:annotation>
      <xs:documentation><![CDATA[
        an HTTP provider endpoint that is optimaized to work with SOAP messages.
      ]]></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name='component' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:choice minOccurs='0' maxOccurs='1'>
              <xs:element ref='tns:component'/>
              <xs:any namespace='##other'/>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:element name='definition' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='description' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='marshaler' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              the bean used to marshal HTTP messages. The default is a
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='policies' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              a list of interceptors that will process messages
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='unbounded'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='serviceUnit' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='ssl' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              the SSL parameters
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:choice minOccurs='0' maxOccurs='1'>
              <xs:element ref='tns:sslParameters'/>
              <xs:any namespace='##other'/>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:element name='wsdl' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              the URL of the WSDL document defining the endpoint's messages
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:any namespace='##other' minOccurs='0' maxOccurs='unbounded'/>
      </xs:sequence>
      <xs:attribute name='clientSoTimeout' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the number of milliseconds the endpoint will block while attempting to read a request. The default value is 60000. Setting this to 0 specifies that the endpoint will never timeout.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='component' type='xs:string'/>
      <xs:attribute name='definition' type='xs:string'/>
      <xs:attribute name='description' type='xs:string'/>
      <xs:attribute name='endpoint' type='xs:string'/>
      <xs:attribute name='interfaceName' type='xs:QName'/>
      <xs:attribute name='locationURI' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the URI to which the endpoint sends requests
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='marshaler' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the bean used to marshal HTTP messages. The default is a
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='proxyHost' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the host name of the HTTP proxy
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='proxyPassword' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the password for the HTTP proxy authentication
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='proxyPort' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the host port of the HTTP proxy (defaults to 80)
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='proxyUsername' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the user name for the HTTP proxy authentication
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='service' type='xs:QName'/>
      <xs:attribute name='serviceUnit' type='xs:string'/>
      <xs:attribute name='ssl' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the SSL parameters
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='useJbiWrapper' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the JBI wrapper is sent in the body of the message. Default is
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='validateWsdl' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the WSDL is checked for WSI-BP compliance. Default is <code>true</code>
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='wsdl' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the URL of the WSDL document defining the endpoint's messages
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


  <!-- element for type: org.apache.servicemix.http.SslParameters -->
  <xs:element name='sslParameters'>
    <xs:annotation>
      <xs:documentation><![CDATA[
        This class contains all parameters needed to create an SSL server or client socket.
      ]]></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name='keyAlias' type='xs:string'/>
      <xs:attribute name='keyManagerFactoryAlgorithm' type='xs:string'/>
      <xs:attribute name='keyPassword' type='xs:string'/>
      <xs:attribute name='keyStore' type='xs:string'/>
      <xs:attribute name='keyStorePassword' type='xs:string'/>
      <xs:attribute name='keyStoreType' type='xs:string'/>
      <xs:attribute name='managed' type='xs:boolean'/>
      <xs:attribute name='needClientAuth' type='xs:boolean'/>
      <xs:attribute name='protocol' type='xs:string'/>
      <xs:attribute name='provider' type='xs:string'/>
      <xs:attribute name='trustManagerFactoryAlgorithm' type='xs:string'/>
      <xs:attribute name='trustStore' type='xs:string'/>
      <xs:attribute name='trustStorePassword' type='xs:string'/>
      <xs:attribute name='trustStoreType' type='xs:string'/>
      <xs:attribute name='wantClientAuth' type='xs:boolean'/>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


</xs:schema>
