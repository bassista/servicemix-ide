<?xml version='1.0'?>
<!-- NOTE: this file is autogenerated by Apache XBean -->

<xs:schema elementFormDefault='qualified'
           targetNamespace='http://servicemix.apache.org/jms/1.0'
           xmlns:xs='http://www.w3.org/2001/XMLSchema'
           xmlns:tns='http://servicemix.apache.org/jms/1.0'>

  <!-- element for type: org.apache.servicemix.jms.JmsComponent -->
  <xs:element name='component'>
    <xs:annotation>
      <xs:documentation><![CDATA[
        JMS JBI binding component
      ]]></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name='authenticationService' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='component' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:choice minOccurs='0' maxOccurs='1'>
              <xs:element ref='tns:component'/>
              <xs:any namespace='##other'/>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:element name='configuration' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the configuration bean used to set up the JMS connections for the endpoints.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:choice minOccurs='0' maxOccurs='1'>
              <xs:element ref='tns:configuration'/>
              <xs:any namespace='##other'/>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:element name='endpoints' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the list of endpoints hosted by the component.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:choice minOccurs='0' maxOccurs='unbounded'>
              <xs:element ref='tns:consumer'/>
              <xs:element ref='tns:endpoint'/>
              <xs:element ref='tns:jca-consumer'/>
              <xs:element ref='tns:provider'/>
              <xs:element ref='tns:soap-consumer'/>
              <xs:element ref='tns:soap-provider'/>
              <xs:any namespace='##other'/>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:element name='executor' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='executorFactory' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='keystoreManager' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:any namespace='##other' minOccurs='0' maxOccurs='unbounded'/>
      </xs:sequence>
      <xs:attribute name='authenticationService' type='xs:string'/>
      <xs:attribute name='component' type='xs:string'/>
      <xs:attribute name='configuration' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the configuration bean used to set up the JMS connections for the endpoints.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='currentState' type='xs:string'/>
      <xs:attribute name='executor' type='xs:string'/>
      <xs:attribute name='executorFactory' type='xs:string'/>
      <xs:attribute name='keystoreManager' type='xs:string'/>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


  <!-- element for type: org.apache.servicemix.jms.JmsConfiguration -->
  <xs:element name='configuration'>
    <xs:annotation>
      <xs:documentation><![CDATA[
        Bean for configuring JMS connections
      ]]></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name='authenticationService' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='connectionFactory' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Default <code>ConnectionFactory</code> to use in a spring configuration.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='keystoreManager' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:any namespace='##other' minOccurs='0' maxOccurs='unbounded'/>
      </xs:sequence>
      <xs:attribute name='authenticationService' type='xs:string'/>
      <xs:attribute name='authenticationServiceName' type='xs:string'/>
      <xs:attribute name='connectionFactory' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Default <code>ConnectionFactory</code> to use in a spring configuration.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='jndiConnectionFactoryName' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the JNDI name used to look up the JMS connection factory.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='jndiInitialContextFactory' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the default JNDI initial conext factory.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='jndiProviderUrl' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the default JNDI provider URL.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='keystoreManager' type='xs:string'/>
      <xs:attribute name='keystoreManagerName' type='xs:string'/>
      <xs:attribute name='password' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the password used to to create a connection.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='processorName' type='xs:string'/>
      <xs:attribute name='userName' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the user name used to create a connection.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


  <!-- element for type: org.apache.servicemix.jms.endpoints.JmsConsumerEndpoint -->
  <xs:element name='consumer'>
    <xs:annotation>
      <xs:documentation><![CDATA[
        A Sping-based JMS consumer endpoint.
      ]]></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name='component' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:choice minOccurs='0' maxOccurs='1'>
              <xs:element ref='tns:component'/>
              <xs:any namespace='##other'/>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:element name='connectionFactory' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the <code>ConnectionFactory</code> used by the endpoint.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='definition' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='description' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              an XML document describing the endpoint
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='destination' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the JMS <code>Destination</code> used to receive messages.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='destinationChooser' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies a class implementing logic for choosing reply destinations.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='destinationResolver' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the class implementing logic for converting strings into
destinations. The default is <code>DynamicDestinationResolver</code>.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='exceptionListener' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies an <code>ExceptionListener</code> to notify in case of a
<code>JMSException</code> is thrown by the registered message listener or
the invocation infrastructure.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='marshaler' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the class implementing the message marshaler. The message
marshaller is responsible for marshalling and unmarshalling JMS messages.
The default is <code>DefaultConsumerMarshaler</code>.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='replyDestination' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the JMS <code>Destination</code> for the replies. If this value
is not set the endpoint will use the <code>destinationChooser</code>
property or the <code>replyDestinationName</code> property to determine
the desitination to use.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='replyProperties' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies custom properties to be placed in the reply's JMS header.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='unbounded'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='serverSessionFactory' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the <code>ServerSessionFactory</code> to use. The default is
<code>SimpleServerSessionFactory</code>.<br/>
This property only effects consumers whose <code>listenerType</code>
property is set to <code>server</code>.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='serviceUnit' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              the service unit responsible for the endpoint
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='store' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the persistent store used to store JBI exchanges that are
waiting to be processed. The store will be automatically created if not
set and the endpoint's <code>stateless</code> property is set to
<code>false</code>.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='storeFactory' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the store factory used to create the store.
If none is set and the endpoint's <code>stateless</code> property is set
to <code>false</code>, a {@link MemoryStoreFactory} will be created
and used instead.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='useMessageIdInResponse' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies if the request message's ID is used as the reply's correlation
ID. The default behavior is to use the request's correlation ID. Setting
this to <code>true</code> means the request's message ID will be used
instead.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:any namespace='##other' minOccurs='0' maxOccurs='unbounded'/>
      </xs:sequence>
      <xs:attribute name='cacheLevel' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the level of caching allowed by the listener. Valid values are
0 through 3. The values map to the following:
<ul>
<li>0 - <code>CACHE_NONE</code></li>
<li>1 - <code>CACHE_CONNECTION</code></li>
<li>2 - <code>CACHE_SESSION</code></li>
<li>3 - <code>CACHE_CONSUMER</code></li>
</ul>
The default is <code>CACHE_NONE</code>.<br/>
This property only effects consumers whose <code>listenerType</code>
property is set to <code>default</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='clientId' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the JMS client id for a shared <code>Connection</code> created and used by
this listener.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='component' type='xs:string'/>
      <xs:attribute name='concurrentConsumers' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the number of concurrent consumers created by the listener.
This property is only used for consumers whose <code>listenerType</code>
property is set to either <code>simple</code> or <code>default</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='connectionFactory' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the <code>ConnectionFactory</code> used by the endpoint.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='definition' type='xs:string'/>
      <xs:attribute name='description' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            an XML document describing the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='destination' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the JMS <code>Destination</code> used to receive messages.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='destinationChooser' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies a class implementing logic for choosing reply destinations.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='destinationName' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies a string identifying the JMS destination used to recieve
messages. The destination is resolved using the
<code>DesitinationResolver</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='destinationResolver' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the class implementing logic for converting strings into
destinations. The default is <code>DynamicDestinationResolver</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='durableSubscriptionName' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the name used to register the durable subscription.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='endpoint' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the name of the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='exceptionListener' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies an <code>ExceptionListener</code> to notify in case of a
<code>JMSException</code> is thrown by the registered message listener or
the invocation infrastructure.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='interfaceName' type='xs:QName'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the QName of the interface exposed by the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='jms102' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the consumer uses JMS 1.0.2 compliant APIs. Defaults to <code>false</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='listenerType' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the type of Spring JMS message listener to use. Valid values
are: <code>default</code>, <code>simple</code>, and <code>server</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='marshaler' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the class implementing the message marshaler. The message
marshaller is responsible for marshalling and unmarshalling JMS messages.
The default is <code>DefaultConsumerMarshaler</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='maxMessagesPerTask' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the number of attempts to receive messages per task. The
default is -1 which specifies an unlimited number of attempts.<br/>
This property only effects consumers whose <code>listenerType</code>
property is set to either <code>default</code> or <code>simple</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='messageSelector' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the message selector string to use. The message selector string
should conform to the descrition in the JMS spec.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='pubSubDomain' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the destination is a topic. <code>true</code> means the
destination is a topic. <code>false</code> means the destination is a
queue.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='pubSubNoLocal' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if messages published by the listener's <code>Connection</code>
are suppressed. The default is <code>false</code>.<br/>
This property only effects consumers whose <code>listenerType</code>
property is set to either <code>default</code> or <code>simple</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='receiveTimeout' type='xs:long'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the timeout for receiving a message in milliseconds. Defaults
to 1000.<br/>
This property only effects consumers whose <code>listenerType</code>
property is set to <code>default</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='recoveryInterval' type='xs:long'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the interval, in milliseconds, between attempts to recover after
a failed listener set-up. Defaults to 5000.<br/>
This property only effects consumers whose <code>listenerType</code>
property is set to <code>default</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='replyDeliveryMode' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the JMS delivery mode used for the reply. Defaults to
2(<code>PERSISTENT</code>).
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='replyDestination' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the JMS <code>Destination</code> for the replies. If this value
is not set the endpoint will use the <code>destinationChooser</code>
property or the <code>replyDestinationName</code> property to determine
the desitination to use.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='replyDestinationName' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the name of the JMS destination to use for the reply. The
actual JMS destination is resolved using the
<code>DestinationResolver</code> specified by the
<code>.destinationResolver</code> property.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='replyExplicitQosEnabled' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the QoS values specified for the endpoint are explicitly
used when the reply is sent. The default is <code>false</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='replyPriority' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the JMS message priority of the reply. Defaults to 4.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='replyProperties' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies custom properties to be placed in the reply's JMS header.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='replyTimeToLive' type='xs:long'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the number of milliseconds the reply message is valid. The
default is unlimited.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='serverSessionFactory' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the <code>ServerSessionFactory</code> to use. The default is
<code>SimpleServerSessionFactory</code>.<br/>
This property only effects consumers whose <code>listenerType</code>
property is set to <code>server</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='service' type='xs:QName'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the QName of the service exposed by the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='serviceUnit' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the service unit responsible for the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='sessionAcknowledgeMode' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the acknowledgment mode that is used when creating a
<code>Session</code> to send a message. Deafults to
<code>Session.AUTO_ACKNOWLEDGE</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='stateless' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the consumer retains state information about the message
exchange while it is in process.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='store' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the persistent store used to store JBI exchanges that are
waiting to be processed. The store will be automatically created if not
set and the endpoint's <code>stateless</code> property is set to
<code>false</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='storeFactory' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the store factory used to create the store.
If none is set and the endpoint's <code>stateless</code> property is set
to <code>false</code>, a {@link MemoryStoreFactory} will be created
and used instead.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='subscriptionDurable' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the listener uses a durable subscription to listen for
messages. Defaults to <code>false</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='synchronous' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the consumer will block while waiting for a response. This
means the consumer can only process one message at a time. Defaults to
<code>true</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='targetEndpoint' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the name of the endpoint to which requests are sent
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='targetInterface' type='xs:QName'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the QName of the interface to which requests are sent
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='targetOperation' type='xs:QName'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the QName of the operation to which requests are sent
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='targetService' type='xs:QName'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the QName of the service to which requests are sent
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='targetUri' type='xs:string'/>
      <xs:attribute name='transacted' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the type of transaction used to wrap the message exchanges.
Valid values are <code>none</code>, <code>xa</code>, and <code>jms</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='useMessageIdInResponse' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the request message's ID is used as the reply's correlation
ID. The default behavior is to use the request's correlation ID. Setting
this to <code>true</code> means the request's message ID will be used
instead.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


  <!-- element for type: org.apache.servicemix.jms.JmsEndpoint -->
  <xs:element name='endpoint'>
    <xs:annotation>
      <xs:documentation><![CDATA[
        non-Spring JMS endpoint
This JMS endpoint can be either a consumer or a provider
and is optimized to work with SOAP messages.
      ]]></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name='activationSpec' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              The ActivationSpec to use on a JCA consumer endpoint.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='bootstrapContext' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              The BootstrapContext to use for a JCA consumer endpoint.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='connectionFactory' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              A configured ConnectionFactory to use on this endpoint.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='definition' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='description' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              an XML document describing the endpoint
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='destination' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              A configured Destination to use on this endpoint.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='marshaler' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the class implementing the logic for marshaling and
unmarshaling messages between the JMS destination and the endpoint.
Defaults to <code>DefaultJmsMarshaler</code>.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='policies' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='unbounded'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='resourceAdapter' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              The ResourceAdapter to use on a JCA consumer endpoint.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='serviceUnit' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              the service unit responsible for the endpoint
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='store' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies a persistent data store to hold pending exchanges for the
endpoint.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='storeFactory' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the factory used to create presistent data stores for this endpoint.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:any namespace='##other' minOccurs='0' maxOccurs='unbounded'/>
      </xs:sequence>
      <xs:attribute name='activationSpec' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            The ActivationSpec to use on a JCA consumer endpoint.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='bootstrapContext' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            The BootstrapContext to use for a JCA consumer endpoint.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='connectionFactory' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            A configured ConnectionFactory to use on this endpoint.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='defaultMep' type='xs:string'/>
      <xs:attribute name='defaultOperation' type='xs:QName'/>
      <xs:attribute name='definition' type='xs:string'/>
      <xs:attribute name='description' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            an XML document describing the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='destination' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            A configured Destination to use on this endpoint.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='destinationStyle' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the destination type used with the jmsProviderDestinationName.
Can be <code>queue</code> or <code>topic</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='dynamic' type='xs:boolean'/>
      <xs:attribute name='endpoint' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the name of the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='initialContextFactory' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            The class name of the JNDI InitialContextFactory to use.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='interfaceName' type='xs:QName'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the QName of the interface exposed by the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='jmsProviderDestinationName' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            The name of the destination created by a call to
<code>Session.createQueue</code> or <code>Session.createTopic</code>.
This property is used when <code>destination</code> and
<code>jndiDestinationName</code> are
both <code>null</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='jmsProviderReplyToName' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            The name of the reply destination created by a call to
<code>Session.createQueue</code> or <code>Session.createTopic</code>.
This property is used when <code>jndiReplyToName</code> is
<code>null</code>. A temporary queue will be used
if a replyTo is not provided.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='jndiConnectionFactoryName' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            The name of the JMS ConnectionFactory to lookup in JNDI.
Used if <code>connectionFactory</code> is <code>null</code>
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='jndiDestinationName' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            The name of the JMS Destination to lookup in JNDI.
Used if <code>destination</code> is <code>null</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='jndiProviderURL' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            The provider URL used to create the JNDI context.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='jndiReplyToName' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            The name of the JMS Reply-to destination to lookup in JNDI.
If this property is not set a temporary replyTo queue is used.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='marshaler' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the class implementing the logic for marshaling and
unmarshaling messages between the JMS destination and the endpoint.
Defaults to <code>DefaultJmsMarshaler</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='needJavaIdentifiers' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Indicates if the JMS properties used by the endpoint need to be spec compliant.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='processorName' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the processor family to use for this endpoint.
Can be:
<ul>
<li><code>multiplexing</code> (default)</li>
<li><code>standard</code></li>
<li><code>jca</code></li>
</ul>
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='resourceAdapter' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            The ResourceAdapter to use on a JCA consumer endpoint.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='role' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the role of this endpoint. Endpoints can be
<code>consumer</code> or <code>provider</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='roleAsString' type='xs:string'/>
      <xs:attribute name='rollbackOnError' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Indicates if the JBI exchange is rolled back if an error is encountered.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='service' type='xs:QName'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the QName of the service exposed by the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='serviceUnit' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the service unit responsible for the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='soap' type='xs:boolean'/>
      <xs:attribute name='soapVersion' type='xs:string'/>
      <xs:attribute name='store' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies a persistent data store to hold pending exchanges for the
endpoint.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='storeFactory' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the factory used to create presistent data stores for this endpoint.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='synchronous' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Indicates if a JCA consumer endpoint sends the JBI exchange
synchronously or asynchronously.
This changes the transaction boundary.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='targetEndpoint' type='xs:string'/>
      <xs:attribute name='targetInterfaceName' type='xs:QName'/>
      <xs:attribute name='targetService' type='xs:QName'/>
      <xs:attribute name='useMsgIdInResponse' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Indicates whether the message id of the request message
should be used as the correlation id in the response or the correlation id of the request.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='wsdlResource' type='xs:string'/>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


  <!-- element for type: org.apache.servicemix.jms.endpoints.JmsJcaConsumerEndpoint -->
  <xs:element name='jca-consumer'>
    <xs:annotation>
      <xs:documentation><![CDATA[
        A Spring-based JMS consumer that uses JCA to connect to the JMS provider
      ]]></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name='activationSpec' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the activation information needed by the endpoint.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='bootstrapContext' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the <code>BootStrapContext</code> used to start the resource
adapter. If this property is not set, a default
<code>BootstrpContext</code> will be created.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='connectionFactory' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the <code>ConnectionFactory</code> used by the endpoint.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='definition' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='description' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              an XML document describing the endpoint
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='destinationChooser' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies a class implementing logic for choosing reply destinations.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='destinationResolver' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the class implementing logic for converting strings into
destinations. The default is <code>DynamicDestinationResolver</code>.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='marshaler' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the class implementing the message marshaler. The message
marshaller is responsible for marshalling and unmarshalling JMS messages.
The default is <code>DefaultConsumerMarshaler</code>.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='replyDestination' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the JMS <code>Destination</code> for the replies. If this value
is not set the endpoint will use the <code>destinationChooser</code>
property or the <code>replyDestinationName</code> property to determine
the desitination to use.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='replyProperties' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies custom properties to be placed in the reply's JMS header.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='unbounded'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='resourceAdapter' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the resource adapter used for the endpoint.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='serviceUnit' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              the service unit responsible for the endpoint
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='store' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the persistent store used to store JBI exchanges that are
waiting to be processed. The store will be automatically created if not
set and the endpoint's <code>stateless</code> property is set to
<code>false</code>.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='storeFactory' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the store factory used to create the store.
If none is set and the endpoint's <code>stateless</code> property is set
to <code>false</code>, a {@link MemoryStoreFactory} will be created
and used instead.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='useMessageIdInResponse' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies if the request message's ID is used as the reply's correlation
ID. The default behavior is to use the request's correlation ID. Setting
this to <code>true</code> means the request's message ID will be used
instead.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:any namespace='##other' minOccurs='0' maxOccurs='unbounded'/>
      </xs:sequence>
      <xs:attribute name='activationSpec' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the activation information needed by the endpoint.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='bootstrapContext' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the <code>BootStrapContext</code> used to start the resource
adapter. If this property is not set, a default
<code>BootstrpContext</code> will be created.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='connectionFactory' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the <code>ConnectionFactory</code> used by the endpoint.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='definition' type='xs:string'/>
      <xs:attribute name='description' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            an XML document describing the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='destinationChooser' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies a class implementing logic for choosing reply destinations.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='destinationResolver' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the class implementing logic for converting strings into
destinations. The default is <code>DynamicDestinationResolver</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='endpoint' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the name of the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='interfaceName' type='xs:QName'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the QName of the interface exposed by the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='jms102' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the consumer uses JMS 1.0.2 compliant APIs. Defaults to <code>false</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='marshaler' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the class implementing the message marshaler. The message
marshaller is responsible for marshalling and unmarshalling JMS messages.
The default is <code>DefaultConsumerMarshaler</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='pubSubDomain' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the destination is a topic. <code>true</code> means the
destination is a topic. <code>false</code> means the destination is a
queue.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='replyDeliveryMode' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the JMS delivery mode used for the reply. Defaults to
2(<code>PERSISTENT</code>).
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='replyDestination' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the JMS <code>Destination</code> for the replies. If this value
is not set the endpoint will use the <code>destinationChooser</code>
property or the <code>replyDestinationName</code> property to determine
the desitination to use.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='replyDestinationName' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the name of the JMS destination to use for the reply. The
actual JMS destination is resolved using the
<code>DestinationResolver</code> specified by the
<code>.destinationResolver</code> property.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='replyExplicitQosEnabled' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the QoS values specified for the endpoint are explicitly
used when the reply is sent. The default is <code>false</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='replyPriority' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the JMS message priority of the reply. Defaults to 4.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='replyProperties' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies custom properties to be placed in the reply's JMS header.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='replyTimeToLive' type='xs:long'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the number of milliseconds the reply message is valid. The
default is unlimited.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='resourceAdapter' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the resource adapter used for the endpoint.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='service' type='xs:QName'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the QName of the service exposed by the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='serviceUnit' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the service unit responsible for the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='stateless' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the consumer retains state information about the message
exchange while it is in process.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='store' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the persistent store used to store JBI exchanges that are
waiting to be processed. The store will be automatically created if not
set and the endpoint's <code>stateless</code> property is set to
<code>false</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='storeFactory' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the store factory used to create the store.
If none is set and the endpoint's <code>stateless</code> property is set
to <code>false</code>, a {@link MemoryStoreFactory} will be created
and used instead.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='synchronous' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the consumer will block while waiting for a response. This
means the consumer can only process one message at a time. Defaults to
<code>true</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='targetEndpoint' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the name of the endpoint to which requests are sent
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='targetInterface' type='xs:QName'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the QName of the interface to which requests are sent
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='targetOperation' type='xs:QName'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the QName of the operation to which requests are sent
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='targetService' type='xs:QName'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the QName of the service to which requests are sent
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='targetUri' type='xs:string'/>
      <xs:attribute name='useMessageIdInResponse' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the request message's ID is used as the reply's correlation
ID. The default behavior is to use the request's correlation ID. Setting
this to <code>true</code> means the request's message ID will be used
instead.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


  <!-- element for type: org.apache.servicemix.jms.endpoints.JmsProviderEndpoint -->
  <xs:element name='provider'>
    <xs:annotation>
      <xs:documentation><![CDATA[
        A Spring-based JMS provider endpoint
      ]]></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name='connectionFactory' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the <code>ConnectionFactory</code> used by the endpoint.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='definition' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='description' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              an XML document describing the endpoint
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='destination' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the JMS <code>Destination</code> used to send messages.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='destinationChooser' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies a class implementing logic for choosing the destination used
to send messages.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='destinationResolver' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the class implementing logic for converting strings into
destinations. The default is <code>DynamicDestinationResolver</code>.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='marshaler' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the class implementing the message marshaler. The message
marshaller is responsible for marshalling and unmarshalling JMS messages.
The default is <code>DefaultProviderMarshaler</code>.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='replyDestination' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Sets the reply destination.
This JMS destination will be used as the default destination for the response
messages when using an InOut JBI exchange. It will be used if the
<code>replyDestinationChooser</code> does not return any value.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='replyDestinationChooser' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies a class implementing logic for choosing the destination used
to recieve replies.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='serviceUnit' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              the service unit responsible for the endpoint
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='store' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Sets the store used to store JBI exchanges that are waiting for a response
JMS message. The store will be automatically created if not set.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='storeFactory' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Sets the store factory used to create the store.
If none is set, a {@link MemoryStoreFactory} will be created and used instead.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:any namespace='##other' minOccurs='0' maxOccurs='unbounded'/>
      </xs:sequence>
      <xs:attribute name='connectionFactory' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the <code>ConnectionFactory</code> used by the endpoint.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='definition' type='xs:string'/>
      <xs:attribute name='deliveryMode' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the JMS delivery mode used for the reply. Defaults to
(2)(<code>PERSISTENT</code>).
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='description' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            an XML document describing the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='destination' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the JMS <code>Destination</code> used to send messages.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='destinationChooser' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies a class implementing logic for choosing the destination used
to send messages.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='destinationName' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies a string identifying the JMS destination used to send
messages. The destination is resolved using the
<code>DesitinationResolver</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='destinationResolver' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the class implementing logic for converting strings into
destinations. The default is <code>DynamicDestinationResolver</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='endpoint' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the name of the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='explicitQosEnabled' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the QoS values specified for the endpoint are explicitly
used when a messages is sent. The default is <code>false</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='interfaceName' type='xs:QName'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the QName of the interface exposed by the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='jms102' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Determines if the provider used JMS 1.0.2 compliant APIs.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='marshaler' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the class implementing the message marshaler. The message
marshaller is responsible for marshalling and unmarshalling JMS messages.
The default is <code>DefaultProviderMarshaler</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='messageIdEnabled' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if your endpoint requires JMS message IDs. Setting the
<code>messageIdEnabled</code> property to <code>false</code> causes the
endpoint to call its message producer's
<code>setDisableMessageID() </code> with a value of <code>true</code>.
The JMS broker is then given a hint that it does not need to generate
message IDs or add them to the messages from the endpoint. The JMS
broker can choose to accept the hint or ignore it.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='messageTimestampEnabled' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if your endpoints requires time stamps on its messages.
Setting the <code>messageTimeStampEnabled</code> property to
<code>false</code> causes the endpoint to call its message producer's
<code>setDisableMessageTimestamp() </code> method with a value of
<code>true</code>. The JMS broker is then given a hint that it does not
need to generate message IDs or add them to the messages from the
endpoint. The JMS broker can choose to accept the hint or ignore it.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='priority' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the priority assigned to the JMS messages. Defaults to 4.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='pubSubDomain' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the destination is a topic. <code>true</code> means the
destination is a topic. <code>false</code> means the destination is a
queue.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='pubSubNoLocal' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if messages published by the listener's <code>Connection</code>
are suppressed. The default is <code>false</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='receiveTimeout' type='xs:long'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the timeout for receiving a message in milliseconds.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='replyDestination' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Sets the reply destination.
This JMS destination will be used as the default destination for the response
messages when using an InOut JBI exchange. It will be used if the
<code>replyDestinationChooser</code> does not return any value.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='replyDestinationChooser' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies a class implementing logic for choosing the destination used
to recieve replies.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='replyDestinationName' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Sets the name of the reply destination.
This property will be used to create the <code>replyDestination</code>
using the <code>destinationResolver</code> when the endpoint starts if
the <code>replyDestination</code> has not been set.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='service' type='xs:QName'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the QName of the service exposed by the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='serviceUnit' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the service unit responsible for the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='store' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Sets the store used to store JBI exchanges that are waiting for a response
JMS message. The store will be automatically created if not set.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='storeFactory' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Sets the store factory used to create the store.
If none is set, a {@link MemoryStoreFactory} will be created and used instead.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='timeToLive' type='xs:long'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the number of milliseconds a message is valid.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


  <!-- element for type: org.apache.servicemix.jms.endpoints.JmsSoapConsumerEndpoint -->
  <xs:element name='soap-consumer'>
    <xs:annotation>
      <xs:documentation><![CDATA[
        A Spring-based JMS consumer optimized for handling SOAP messages
      ]]></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name='component' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:choice minOccurs='0' maxOccurs='1'>
              <xs:element ref='tns:component'/>
              <xs:any namespace='##other'/>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:element name='connectionFactory' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the <code>ConnectionFactory</code> used by the endpoint.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='definition' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='description' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              an XML document describing the endpoint
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='destination' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the JMS <code>Destination</code> used to receive messages.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='destinationChooser' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies a class implementing logic for choosing reply destinations.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='destinationResolver' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the class implementing logic for converting strings into
destinations. The default is <code>DynamicDestinationResolver</code>.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='exceptionListener' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies an <code>ExceptionListener</code> to notify in case of a
<code>JMSException</code> is thrown by the registered message listener or
the invocation infrastructure.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='marshaler' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the class implementing the message marshaler. The message
marshaller is responsible for marshalling and unmarshalling JMS messages.
The default is <code>DefaultConsumerMarshaler</code>.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='policies' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies an array of interceptors used to process SOAP messages.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='unbounded'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='replyDestination' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the JMS <code>Destination</code> for the replies. If this value
is not set the endpoint will use the <code>destinationChooser</code>
property or the <code>replyDestinationName</code> property to determine
the desitination to use.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='replyProperties' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies custom properties to be placed in the reply's JMS header.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='unbounded'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='serverSessionFactory' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the <code>ServerSessionFactory</code> to use. The default is
<code>SimpleServerSessionFactory</code>.<br/>
This property only effects consumers whose <code>listenerType</code>
property is set to <code>server</code>.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='serviceUnit' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              the service unit responsible for the endpoint
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='store' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the persistent store used to store JBI exchanges that are
waiting to be processed. The store will be automatically created if not
set and the endpoint's <code>stateless</code> property is set to
<code>false</code>.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='storeFactory' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the store factory used to create the store.
If none is set and the endpoint's <code>stateless</code> property is set
to <code>false</code>, a {@link MemoryStoreFactory} will be created
and used instead.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='useMessageIdInResponse' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies if the request message's ID is used as the reply's correlation
ID. The default behavior is to use the request's correlation ID. Setting
this to <code>true</code> means the request's message ID will be used
instead.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:any namespace='##other' minOccurs='0' maxOccurs='unbounded'/>
      </xs:sequence>
      <xs:attribute name='cacheLevel' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the level of caching allowed by the listener. Valid values are
0 through 3. The values map to the following:
<ul>
<li>0 - <code>CACHE_NONE</code></li>
<li>1 - <code>CACHE_CONNECTION</code></li>
<li>2 - <code>CACHE_SESSION</code></li>
<li>3 - <code>CACHE_CONSUMER</code></li>
</ul>
The default is <code>CACHE_NONE</code>.<br/>
This property only effects consumers whose <code>listenerType</code>
property is set to <code>default</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='clientId' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the JMS client id for a shared <code>Connection</code> created and used by
this listener.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='component' type='xs:string'/>
      <xs:attribute name='concurrentConsumers' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the number of concurrent consumers created by the listener.
This property is only used for consumers whose <code>listenerType</code>
property is set to either <code>simple</code> or <code>default</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='connectionFactory' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the <code>ConnectionFactory</code> used by the endpoint.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='definition' type='xs:string'/>
      <xs:attribute name='description' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            an XML document describing the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='destination' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the JMS <code>Destination</code> used to receive messages.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='destinationChooser' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies a class implementing logic for choosing reply destinations.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='destinationName' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies a string identifying the JMS destination used to recieve
messages. The destination is resolved using the
<code>DesitinationResolver</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='destinationResolver' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the class implementing logic for converting strings into
destinations. The default is <code>DynamicDestinationResolver</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='durableSubscriptionName' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the name used to register the durable subscription.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='endpoint' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the name of the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='exceptionListener' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies an <code>ExceptionListener</code> to notify in case of a
<code>JMSException</code> is thrown by the registered message listener or
the invocation infrastructure.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='interfaceName' type='xs:QName'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the QName of the interface exposed by the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='jms102' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the consumer uses JMS 1.0.2 compliant APIs. Defaults to <code>false</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='listenerType' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the type of Spring JMS message listener to use. Valid values
are: <code>default</code>, <code>simple</code>, and <code>server</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='marshaler' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the class implementing the message marshaler. The message
marshaller is responsible for marshalling and unmarshalling JMS messages.
The default is <code>DefaultConsumerMarshaler</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='maxMessagesPerTask' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the number of attempts to receive messages per task. The
default is -1 which specifies an unlimited number of attempts.<br/>
This property only effects consumers whose <code>listenerType</code>
property is set to either <code>default</code> or <code>simple</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='messageSelector' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the message selector string to use. The message selector string
should conform to the descrition in the JMS spec.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='pubSubDomain' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the destination is a topic. <code>true</code> means the
destination is a topic. <code>false</code> means the destination is a
queue.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='pubSubNoLocal' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if messages published by the listener's <code>Connection</code>
are suppressed. The default is <code>false</code>.<br/>
This property only effects consumers whose <code>listenerType</code>
property is set to either <code>default</code> or <code>simple</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='receiveTimeout' type='xs:long'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the timeout for receiving a message in milliseconds. Defaults
to 1000.<br/>
This property only effects consumers whose <code>listenerType</code>
property is set to <code>default</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='recoveryInterval' type='xs:long'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the interval, in milliseconds, between attempts to recover after
a failed listener set-up. Defaults to 5000.<br/>
This property only effects consumers whose <code>listenerType</code>
property is set to <code>default</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='replyDeliveryMode' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the JMS delivery mode used for the reply. Defaults to
2(<code>PERSISTENT</code>).
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='replyDestination' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the JMS <code>Destination</code> for the replies. If this value
is not set the endpoint will use the <code>destinationChooser</code>
property or the <code>replyDestinationName</code> property to determine
the desitination to use.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='replyDestinationName' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the name of the JMS destination to use for the reply. The
actual JMS destination is resolved using the
<code>DestinationResolver</code> specified by the
<code>.destinationResolver</code> property.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='replyExplicitQosEnabled' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the QoS values specified for the endpoint are explicitly
used when the reply is sent. The default is <code>false</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='replyPriority' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the JMS message priority of the reply. Defaults to 4.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='replyProperties' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies custom properties to be placed in the reply's JMS header.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='replyTimeToLive' type='xs:long'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the number of milliseconds the reply message is valid. The
default is unlimited.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='serverSessionFactory' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the <code>ServerSessionFactory</code> to use. The default is
<code>SimpleServerSessionFactory</code>.<br/>
This property only effects consumers whose <code>listenerType</code>
property is set to <code>server</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='service' type='xs:QName'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the QName of the service exposed by the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='serviceUnit' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the service unit responsible for the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='sessionAcknowledgeMode' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the acknowledgment mode that is used when creating a
<code>Session</code> to send a message. Deafults to
<code>Session.AUTO_ACKNOWLEDGE</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='stateless' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the consumer retains state information about the message
exchange while it is in process.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='store' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the persistent store used to store JBI exchanges that are
waiting to be processed. The store will be automatically created if not
set and the endpoint's <code>stateless</code> property is set to
<code>false</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='storeFactory' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the store factory used to create the store.
If none is set and the endpoint's <code>stateless</code> property is set
to <code>false</code>, a {@link MemoryStoreFactory} will be created
and used instead.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='subscriptionDurable' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the listener uses a durable subscription to listen for
messages. Defaults to <code>false</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='synchronous' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the consumer will block while waiting for a response. This
means the consumer can only process one message at a time. Defaults to
<code>true</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='targetEndpoint' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the name of the endpoint to which requests are sent
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='targetInterface' type='xs:QName'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the QName of the interface to which requests are sent
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='targetOperation' type='xs:QName'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the QName of the operation to which requests are sent
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='targetService' type='xs:QName'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the QName of the service to which requests are sent
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='targetUri' type='xs:string'/>
      <xs:attribute name='transacted' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the type of transaction used to wrap the message exchanges.
Valid values are <code>none</code>, <code>xa</code>, and <code>jms</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='useJbiWrapper' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the endpoint expects SOAP messages to be wrapped in the JBI
wrapper. Defaults to <code>true</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='useMessageIdInResponse' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the request message's ID is used as the reply's correlation
ID. The default behavior is to use the request's correlation ID. Setting
this to <code>true</code> means the request's message ID will be used
instead.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='validateWsdl' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the WSDL is checked WSI-BP compliance. Defaults to
<code>true</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='wsdl' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the WSDL document describing the service's interface.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


  <!-- element for type: org.apache.servicemix.jms.endpoints.JmsSoapProviderEndpoint -->
  <xs:element name='soap-provider'>
    <xs:annotation>
      <xs:documentation><![CDATA[
        A Spring-based JMS provider optimized for SOAP messages
      ]]></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name='connectionFactory' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the <code>ConnectionFactory</code> used by the endpoint.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='definition' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='description' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              an XML document describing the endpoint
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='destination' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the JMS <code>Destination</code> used to send messages.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='destinationChooser' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies a class implementing logic for choosing the destination used
to send messages.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='destinationResolver' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the class implementing logic for converting strings into
destinations. The default is <code>DynamicDestinationResolver</code>.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='marshaler' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies the class implementing the message marshaler. The message
marshaller is responsible for marshalling and unmarshalling JMS messages.
The default is <code>DefaultProviderMarshaler</code>.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='policies' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies an array of interceptors used to process SOAP messages.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='unbounded'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='replyDestination' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Sets the reply destination.
This JMS destination will be used as the default destination for the response
messages when using an InOut JBI exchange. It will be used if the
<code>replyDestinationChooser</code> does not return any value.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='replyDestinationChooser' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies a class implementing logic for choosing the destination used
to recieve replies.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='serviceUnit' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              the service unit responsible for the endpoint
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='store' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Sets the store used to store JBI exchanges that are waiting for a response
JMS message. The store will be automatically created if not set.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='storeFactory' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Sets the store factory used to create the store.
If none is set, a {@link MemoryStoreFactory} will be created and used instead.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:any namespace='##other' minOccurs='0' maxOccurs='unbounded'/>
      </xs:sequence>
      <xs:attribute name='connectionFactory' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the <code>ConnectionFactory</code> used by the endpoint.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='definition' type='xs:string'/>
      <xs:attribute name='deliveryMode' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the JMS delivery mode used for the reply. Defaults to
(2)(<code>PERSISTENT</code>).
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='description' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            an XML document describing the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='destination' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the JMS <code>Destination</code> used to send messages.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='destinationChooser' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies a class implementing logic for choosing the destination used
to send messages.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='destinationName' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies a string identifying the JMS destination used to send
messages. The destination is resolved using the
<code>DesitinationResolver</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='destinationResolver' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the class implementing logic for converting strings into
destinations. The default is <code>DynamicDestinationResolver</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='endpoint' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the name of the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='explicitQosEnabled' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the QoS values specified for the endpoint are explicitly
used when a messages is sent. The default is <code>false</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='interfaceName' type='xs:QName'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the QName of the interface exposed by the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='jms102' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Determines if the provider used JMS 1.0.2 compliant APIs.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='marshaler' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the class implementing the message marshaler. The message
marshaller is responsible for marshalling and unmarshalling JMS messages.
The default is <code>DefaultProviderMarshaler</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='messageIdEnabled' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if your endpoint requires JMS message IDs. Setting the
<code>messageIdEnabled</code> property to <code>false</code> causes the
endpoint to call its message producer's
<code>setDisableMessageID() </code> with a value of <code>true</code>.
The JMS broker is then given a hint that it does not need to generate
message IDs or add them to the messages from the endpoint. The JMS
broker can choose to accept the hint or ignore it.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='messageTimestampEnabled' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if your endpoints requires time stamps on its messages.
Setting the <code>messageTimeStampEnabled</code> property to
<code>false</code> causes the endpoint to call its message producer's
<code>setDisableMessageTimestamp() </code> method with a value of
<code>true</code>. The JMS broker is then given a hint that it does not
need to generate message IDs or add them to the messages from the
endpoint. The JMS broker can choose to accept the hint or ignore it.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='priority' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the priority assigned to the JMS messages. Defaults to 4.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='pubSubDomain' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the destination is a topic. <code>true</code> means the
destination is a topic. <code>false</code> means the destination is a
queue.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='pubSubNoLocal' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if messages published by the listener's <code>Connection</code>
are suppressed. The default is <code>false</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='receiveTimeout' type='xs:long'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the timeout for receiving a message in milliseconds.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='replyDestination' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Sets the reply destination.
This JMS destination will be used as the default destination for the response
messages when using an InOut JBI exchange. It will be used if the
<code>replyDestinationChooser</code> does not return any value.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='replyDestinationChooser' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies a class implementing logic for choosing the destination used
to recieve replies.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='replyDestinationName' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Sets the name of the reply destination.
This property will be used to create the <code>replyDestination</code>
using the <code>destinationResolver</code> when the endpoint starts if
the <code>replyDestination</code> has not been set.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='service' type='xs:QName'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the QName of the service exposed by the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='serviceUnit' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the service unit responsible for the endpoint
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='store' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Sets the store used to store JBI exchanges that are waiting for a response
JMS message. The store will be automatically created if not set.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='storeFactory' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Sets the store factory used to create the store.
If none is set, a {@link MemoryStoreFactory} will be created and used instead.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='timeToLive' type='xs:long'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the number of milliseconds a message is valid.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='useJbiWrapper' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the endpoint expects SOAP messages to be wrapped in the JBI
wrapper. Defaults to <code>true</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='validateWsdl' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if the WSDL is checked WSI-BP compliance. Defaults to
<code>true</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='wsdl' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies the WSDL document describing the service's interface.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


</xs:schema>
