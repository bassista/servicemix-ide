<?xml version='1.0'?>
<!-- NOTE: this file is autogenerated by Apache XBean -->

<xs:schema elementFormDefault='qualified'
           targetNamespace='http://servicemix.apache.org/smpp/1.0'
           xmlns:xs='http://www.w3.org/2001/XMLSchema'
           xmlns:tns='http://servicemix.apache.org/smpp/1.0'>

  <!-- element for type: org.apache.servicemix.smpp.SmppComponent -->
  <xs:element name='component'>
    <xs:annotation>
      <xs:documentation><![CDATA[
        Smpp Component
      ]]></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name='endpoints' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Getter on the component endpoints
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:choice minOccurs='0' maxOccurs='unbounded'>
              <xs:element ref='tns:consumer'/>
              <xs:element ref='tns:provider'/>
              <xs:any namespace='##other'/>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:element name='executor' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='executorFactory' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:any namespace='##other' minOccurs='0' maxOccurs='unbounded'/>
      </xs:sequence>
      <xs:attribute name='executor' type='xs:string'/>
      <xs:attribute name='executorFactory' type='xs:string'/>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


  <!-- element for type: org.apache.servicemix.smpp.SmppConsumerEndpoint -->
  <xs:element name='consumer'>
    <xs:annotation>
      <xs:documentation><![CDATA[
        A polling component which bind with jSMPP and receive SMPP messages and sends
the SMPPs into the JBI bus as messages.
      ]]></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name='definition' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='description' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='marshaler' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              <p>
With this method you can specify a marshaler class which provides the
logic for converting a sms message into a normalized message. This class
has to implement the interface class <code>SmppMarshaler</code>. If you
don't specify a marshaler, the <code>DefaultSmppMarshaler</code> will be
used.
</p>
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='serviceUnit' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:any namespace='##other' minOccurs='0' maxOccurs='unbounded'/>
      </xs:sequence>
      <xs:attribute name='definition' type='xs:string'/>
      <xs:attribute name='description' type='xs:string'/>
      <xs:attribute name='endpoint' type='xs:string'/>
      <xs:attribute name='enquireLinkTimer' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            <p>
This attribute specifies the enquire link timer defining the SMSC time
interval.<br/>
</p>
<i>&nbsp;&nbsp;&nbsp;The default value is <b>50000</b></i>
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='host' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            <p>
This attribute specifies the host name to use for connecting to the
server.<br/>
<p>
<i>&nbsp;&nbsp;&nbsp;The default value is <b>null</b></i>
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='interfaceName' type='xs:QName'/>
      <xs:attribute name='marshaler' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            <p>
With this method you can specify a marshaler class which provides the
logic for converting a sms message into a normalized message. This class
has to implement the interface class <code>SmppMarshaler</code>. If you
don't specify a marshaler, the <code>DefaultSmppMarshaler</code> will be
used.
</p>
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='password' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            <p>
This attribute specifies the password to use for connecting to the
server.<br/>
<p>
<i>&nbsp;&nbsp;&nbsp;The default value is <b>null</b></i>
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='port' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            <p>
This attribute specifies the port number to use for connecting to the
server.<br/>
<p>
<i>&nbsp;&nbsp;&nbsp;The default value is <b>2775</b></i>
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='service' type='xs:QName'/>
      <xs:attribute name='serviceUnit' type='xs:string'/>
      <xs:attribute name='systemId' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            <p>
This attribute specifies the system id to use for connecting to the
server.<br/>
<p>
<i>&nbsp;&nbsp;&nbsp;The default value is <b>null</b></i>
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='targetEndpoint' type='xs:string'/>
      <xs:attribute name='targetInterface' type='xs:QName'/>
      <xs:attribute name='targetOperation' type='xs:QName'/>
      <xs:attribute name='targetService' type='xs:QName'/>
      <xs:attribute name='targetUri' type='xs:string'/>
      <xs:attribute name='transactionTimer' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            <p>
This attribute specifies the transaction timer defining the SMSC timeout.
<br/>
</p>
<i>&nbsp;&nbsp;&nbsp;The default value is <b>100000</b></i>
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


  <!-- element for type: org.apache.servicemix.smpp.SmppProviderEndpoint -->
  <xs:element name='provider'>
    <xs:annotation>
      <xs:documentation><![CDATA[
        A provider component receives XML message from the NMR and converts into SMPP
packet and sends it to SMS.
      ]]></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name='definition' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='description' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='marshaler' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              <p>
With this method you can specify a marshaler class which provides the
logic for converting a sms message into a normalized message. This class
has to implement the interface class <code>SmppMarshaler</code>. If you
don't specify a marshaler, the <code>DefaultSmppMarshaler</code> will be
used.
</p>
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='serviceUnit' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:any namespace='##other' minOccurs='0' maxOccurs='unbounded'/>
      </xs:sequence>
      <xs:attribute name='definition' type='xs:string'/>
      <xs:attribute name='description' type='xs:string'/>
      <xs:attribute name='endpoint' type='xs:string'/>
      <xs:attribute name='enquireLinkTimer' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            <p>
This attribute specifies the enquire link timer defining the resend time
interval.<br/>
</p>
<i>&nbsp;&nbsp;&nbsp;The default value is <b>50000</b> milliseconds</i>
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='host' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            <p>
This attribute specifies the host name to use for connecting to the
server.<br/>
<p>
<i>&nbsp;&nbsp;&nbsp;The default value is <b>null</b></i>
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='interfaceName' type='xs:QName'/>
      <xs:attribute name='marshaler' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            <p>
With this method you can specify a marshaler class which provides the
logic for converting a sms message into a normalized message. This class
has to implement the interface class <code>SmppMarshaler</code>. If you
don't specify a marshaler, the <code>DefaultSmppMarshaler</code> will be
used.
</p>
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='password' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            <p>
This attribute specifies the password to use for connecting to the
server.<br/>
<p>
<i>&nbsp;&nbsp;&nbsp;The default value is <b>null</b></i>
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='port' type='xs:integer'/>
      <xs:attribute name='service' type='xs:QName'/>
      <xs:attribute name='serviceUnit' type='xs:string'/>
      <xs:attribute name='systemId' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            <p>
This attribute specifies the system id to use for connecting to the
server.<br/>
<p>
<i>&nbsp;&nbsp;&nbsp;The default value is <b>null</b></i>
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='transactionTimer' type='xs:integer'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            <p>
This attribute specifies the transaction timer defining the maximum
lifetime of a message.<br/>
</p>
<i>&nbsp;&nbsp;&nbsp;The default value is <b>100000</b> milliseconds</i>
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


</xs:schema>
