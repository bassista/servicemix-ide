<?xml version='1.0'?>
<!-- NOTE: this file is autogenerated by Apache XBean -->

<xs:schema elementFormDefault='qualified'
           targetNamespace='http://servicemix.apache.org/vfs/1.0'
           xmlns:xs='http://www.w3.org/2001/XMLSchema'
           xmlns:tns='http://servicemix.apache.org/vfs/1.0'>

  <!-- element for type: org.apache.servicemix.vfs.VFSComponent -->
  <xs:element name='component'>
    <xs:annotation>
      <xs:documentation><![CDATA[
        VFS Component
      ]]></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name='endpoints' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:choice minOccurs='0' maxOccurs='unbounded'>
              <xs:element ref='tns:poller'/>
              <xs:element ref='tns:sender'/>
              <xs:any namespace='##other'/>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:element name='executor' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='executorFactory' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:any namespace='##other' minOccurs='0' maxOccurs='unbounded'/>
      </xs:sequence>
      <xs:attribute name='executor' type='xs:string'/>
      <xs:attribute name='executorFactory' type='xs:string'/>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


  <!-- element for type: org.apache.servicemix.vfs.VFSPollingEndpoint -->
  <xs:element name='poller'>
    <xs:annotation>
      <xs:documentation><![CDATA[
        A polling endpoint that looks for a file or files in a virtual file system
and sends the files to a target service (via the JBI bus), deleting the files
by default when they are processed. The polling endpoint uses a file marshaler
to send the data as a JBI message; by default this marshaler expects XML
payload. For non-XML payload, e.g. plain-text or binary files, use an
alternative marshaler such as the
<code>org.apache.servicemix.components.util.BinaryFileMarshaler</code>
      ]]></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name='component' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              the default component
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:choice minOccurs='0' maxOccurs='1'>
              <xs:element ref='tns:component'/>
              <xs:any namespace='##other'/>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:element name='definition' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='description' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='fileSystemManager' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              sets the file system manager
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='lockManager' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Bean defining the class implementing the file locking strategy. This bean
must be an implementation of the
<code>org.apache.servicemix.locks.LockManager</code> interface. By
default, this will be set to an instances of
<code>org.apache.servicemix.common.locks.impl.SimpleLockManager</code>.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='marshaler' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies a <code>FileMarshaler</code> object that will marshal file data
into the NMR. The default file marshaller can read valid XML data.
<code>FileMarshaler</code> objects are implementations of
<code>org.apache.servicemix.components.util.FileMarshaler</code>.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='scheduler' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='selector' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies a <code>FileSelector</code> object.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='serviceUnit' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:any namespace='##other' minOccurs='0' maxOccurs='unbounded'/>
      </xs:sequence>
      <xs:attribute name='component' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            the default component
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='concurrentPolling' type='xs:boolean'/>
      <xs:attribute name='definition' type='xs:string'/>
      <xs:attribute name='delay' type='xs:long'/>
      <xs:attribute name='deleteFile' type='xs:boolean'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies if files should be deleted after they are processed. Default
value is <code>true</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='description' type='xs:string'/>
      <xs:attribute name='endpoint' type='xs:string'/>
      <xs:attribute name='fileSystemManager' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            sets the file system manager
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='firstTime' type='xs:date'/>
      <xs:attribute name='interfaceName' type='xs:QName'/>
      <xs:attribute name='lockManager' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Bean defining the class implementing the file locking strategy. This bean
must be an implementation of the
<code>org.apache.servicemix.locks.LockManager</code> interface. By
default, this will be set to an instances of
<code>org.apache.servicemix.common.locks.impl.SimpleLockManager</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='marshaler' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies a <code>FileMarshaler</code> object that will marshal file data
into the NMR. The default file marshaller can read valid XML data.
<code>FileMarshaler</code> objects are implementations of
<code>org.apache.servicemix.components.util.FileMarshaler</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='path' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies a <code>String</code> object representing the path of the
file/folder to be polled.<br /><br />
<b><u>Examples:</u></b><br />
<ul>
<li>file:///home/lhein/pollFolder</li>
<li>zip:file:///home/lhein/pollFolder/myFile.zip</li>
<li>jar:http://www.myhost.com/files/Examples.jar</li>
<li>jar:../lib/classes.jar!/META-INF/manifest.mf</li>
<li>tar:gz:http://anyhost/dir/mytar.tar.gz!/mytar.tar!/path/in/tar/README.txt</li>
<li>tgz:file://anyhost/dir/mytar.tgz!/somepath/somefile</li>
<li>gz:/my/gz/file.gz</li>
<li>http://myusername@somehost/index.html</li>
<li>webdav://somehost:8080/dist</li>
<li>ftp://myusername:mypassword@somehost/pub/downloads/somefile.tgz</li>
<li>sftp://myusername:mypassword@somehost/pub/downloads/somefile.tgz</li>
<li>smb://somehost/home</li>
<li>tmp://dir/somefile.txt</li>
<li>res:path/in/classpath/image.png</li>
<li>ram:///any/path/to/file.txt</li>
<li>mime:file:///your/path/mail/anymail.mime!/filename.pdf</li>
</ul>

For further details have a look at {@link http://commons.apache.org/vfs/filesystems.html}.
<br /><br />
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='period' type='xs:long'/>
      <xs:attribute name='recursive' type='xs:boolean'/>
      <xs:attribute name='scheduler' type='xs:string'/>
      <xs:attribute name='selector' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies a <code>FileSelector</code> object.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='service' type='xs:QName'/>
      <xs:attribute name='serviceUnit' type='xs:string'/>
      <xs:attribute name='targetEndpoint' type='xs:string'/>
      <xs:attribute name='targetInterface' type='xs:QName'/>
      <xs:attribute name='targetOperation' type='xs:QName'/>
      <xs:attribute name='targetService' type='xs:QName'/>
      <xs:attribute name='targetUri' type='xs:string'/>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


  <!-- element for type: org.apache.servicemix.vfs.VFSSendingEndpoint -->
  <xs:element name='sender'>
    <xs:annotation>
      <xs:documentation><![CDATA[
        An endpoint which receives messages from the NMR and writes the message to
the virtual file system.
      ]]></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name='definition' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='description' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='fileSystemManager' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              sets the file system manager
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='marshaler' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Specifies a <code>FileMarshaler</code> object that will marshal file data
into the NMR. The default file marshaller can read valid XML data.
<code>FileMarshaler</code> objects are implementations of
<code>org.apache.servicemix.components.util.FileMarshaler</code>.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='serviceUnit' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:any namespace='##other' minOccurs='0' maxOccurs='unbounded'/>
      </xs:sequence>
      <xs:attribute name='definition' type='xs:string'/>
      <xs:attribute name='description' type='xs:string'/>
      <xs:attribute name='endpoint' type='xs:string'/>
      <xs:attribute name='fileSystemManager' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            sets the file system manager
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='interfaceName' type='xs:QName'/>
      <xs:attribute name='marshaler' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies a <code>FileMarshaler</code> object that will marshal file data
into the NMR. The default file marshaller can read valid XML data.
<code>FileMarshaler</code> objects are implementations of
<code>org.apache.servicemix.components.util.FileMarshaler</code>.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='path' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies a <code>String</code> object representing the path of the
file/folder to be polled.<br /><br />
<b><u>Examples:</u></b><br />
<ul>
<li>file:///home/lhein/pollFolder</li>
<li>zip:file:///home/lhein/pollFolder/myFile.zip</li>
<li>jar:http://www.myhost.com/files/Examples.jar</li>
<li>jar:../lib/classes.jar!/META-INF/manifest.mf</li>
<li>tar:gz:http://anyhost/dir/mytar.tar.gz!/mytar.tar!/path/in/tar/README.txt</li>
<li>tgz:file://anyhost/dir/mytar.tgz!/somepath/somefile</li>
<li>gz:/my/gz/file.gz</li>
<li>http://myusername@somehost/index.html</li>
<li>webdav://somehost:8080/dist</li>
<li>ftp://myusername:mypassword@somehost/pub/downloads/somefile.tgz</li>
<li>sftp://myusername:mypassword@somehost/pub/downloads/somefile.tgz</li>
<li>smb://somehost/home</li>
<li>tmp://dir/somefile.txt</li>
<li>res:path/in/classpath/image.png</li>
<li>ram:///any/path/to/file.txt</li>
<li>mime:file:///your/path/mail/anymail.mime!/filename.pdf</li>
</ul>

For further details have a look at {@link http://commons.apache.org/vfs/filesystems.html}.
<br /><br />
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='service' type='xs:QName'/>
      <xs:attribute name='serviceUnit' type='xs:string'/>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


</xs:schema>
