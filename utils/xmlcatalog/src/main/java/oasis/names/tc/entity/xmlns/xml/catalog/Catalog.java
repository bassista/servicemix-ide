//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.06.22 at 02:08:40 PM CEST 
//


package oasis.names.tc.entity.xmlns.xml.catalog;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyAttribute;
import javax.xml.bind.annotation.XmlAnyElement;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.namespace.QName;
import org.w3c.dom.Element;


/**
 * <p>Java class for catalog complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="catalog">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="public" type="{urn:oasis:names:tc:entity:xmlns:xml:catalog}public" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="system" type="{urn:oasis:names:tc:entity:xmlns:xml:catalog}system" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="uri" type="{urn:oasis:names:tc:entity:xmlns:xml:catalog}uri" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="rewriteSystem" type="{urn:oasis:names:tc:entity:xmlns:xml:catalog}rewriteSystem" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="rewriteURI" type="{urn:oasis:names:tc:entity:xmlns:xml:catalog}rewriteURI" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="delegatePublic" type="{urn:oasis:names:tc:entity:xmlns:xml:catalog}delegatePublic" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="delegateSystem" type="{urn:oasis:names:tc:entity:xmlns:xml:catalog}delegateSystem" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="delegateURI" type="{urn:oasis:names:tc:entity:xmlns:xml:catalog}delegateURI" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="nextCatalog" type="{urn:oasis:names:tc:entity:xmlns:xml:catalog}nextCatalog" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="group" type="{urn:oasis:names:tc:entity:xmlns:xml:catalog}group"/>
 *         &lt;any/>
 *       &lt;/sequence>
 *       &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *       &lt;attribute name="prefer" type="{urn:oasis:names:tc:entity:xmlns:xml:catalog}systemOrPublic" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "catalog", propOrder = {
    "publics",
    "systems",
    "uris",
    "rewriteSystems",
    "rewriteURIs",
    "delegatePublics",
    "delegateSystems",
    "delegateURIs",
    "nextCatalogs",
    "group",
    "any"
})
@XmlRootElement(name = "catalog")
public class Catalog {

    @XmlElement(name = "public")
    protected List<Public> publics;
    @XmlElement(name = "system")
    protected List<System> systems;
    @XmlElement(name = "uri")
    protected List<Uri> uris;
    @XmlElement(name = "rewriteSystem")
    protected List<RewriteSystem> rewriteSystems;
    @XmlElement(name = "rewriteURI")
    protected List<RewriteURI> rewriteURIs;
    @XmlElement(name = "delegatePublic")
    protected List<DelegatePublic> delegatePublics;
    @XmlElement(name = "delegateSystem")
    protected List<DelegateSystem> delegateSystems;
    @XmlElement(name = "delegateURI")
    protected List<DelegateURI> delegateURIs;
    @XmlElement(name = "nextCatalog")
    protected List<NextCatalog> nextCatalogs;
    @XmlElement(required = true)
    protected Group group;
    @XmlAnyElement
    protected Element any;
    @XmlAttribute
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    @XmlSchemaType(name = "ID")
    protected String id;
    @XmlAttribute
    protected SystemOrPublic prefer;
    @XmlAnyAttribute
    private Map<QName, String> otherAttributes = new HashMap<QName, String>();

    /**
     * Gets the value of the publics property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the publics property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPublics().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Public }
     * 
     * 
     */
    public List<Public> getPublics() {
        if (publics == null) {
            publics = new ArrayList<Public>();
        }
        return this.publics;
    }

    /**
     * Gets the value of the systems property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the systems property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSystems().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link System }
     * 
     * 
     */
    public List<System> getSystems() {
        if (systems == null) {
            systems = new ArrayList<System>();
        }
        return this.systems;
    }

    /**
     * Gets the value of the uris property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the uris property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getUris().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Uri }
     * 
     * 
     */
    public List<Uri> getUris() {
        if (uris == null) {
            uris = new ArrayList<Uri>();
        }
        return this.uris;
    }

    /**
     * Gets the value of the rewriteSystems property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the rewriteSystems property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRewriteSystems().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link RewriteSystem }
     * 
     * 
     */
    public List<RewriteSystem> getRewriteSystems() {
        if (rewriteSystems == null) {
            rewriteSystems = new ArrayList<RewriteSystem>();
        }
        return this.rewriteSystems;
    }

    /**
     * Gets the value of the rewriteURIs property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the rewriteURIs property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRewriteURIs().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link RewriteURI }
     * 
     * 
     */
    public List<RewriteURI> getRewriteURIs() {
        if (rewriteURIs == null) {
            rewriteURIs = new ArrayList<RewriteURI>();
        }
        return this.rewriteURIs;
    }

    /**
     * Gets the value of the delegatePublics property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the delegatePublics property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDelegatePublics().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DelegatePublic }
     * 
     * 
     */
    public List<DelegatePublic> getDelegatePublics() {
        if (delegatePublics == null) {
            delegatePublics = new ArrayList<DelegatePublic>();
        }
        return this.delegatePublics;
    }

    /**
     * Gets the value of the delegateSystems property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the delegateSystems property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDelegateSystems().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DelegateSystem }
     * 
     * 
     */
    public List<DelegateSystem> getDelegateSystems() {
        if (delegateSystems == null) {
            delegateSystems = new ArrayList<DelegateSystem>();
        }
        return this.delegateSystems;
    }

    /**
     * Gets the value of the delegateURIs property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the delegateURIs property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDelegateURIs().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DelegateURI }
     * 
     * 
     */
    public List<DelegateURI> getDelegateURIs() {
        if (delegateURIs == null) {
            delegateURIs = new ArrayList<DelegateURI>();
        }
        return this.delegateURIs;
    }

    /**
     * Gets the value of the nextCatalogs property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the nextCatalogs property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNextCatalogs().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NextCatalog }
     * 
     * 
     */
    public List<NextCatalog> getNextCatalogs() {
        if (nextCatalogs == null) {
            nextCatalogs = new ArrayList<NextCatalog>();
        }
        return this.nextCatalogs;
    }

    /**
     * Gets the value of the group property.
     * 
     * @return
     *     possible object is
     *     {@link Group }
     *     
     */
    public Group getGroup() {
        return group;
    }

    /**
     * Sets the value of the group property.
     * 
     * @param value
     *     allowed object is
     *     {@link Group }
     *     
     */
    public void setGroup(Group value) {
        this.group = value;
    }

    /**
     * Gets the value of the any property.
     * 
     * @return
     *     possible object is
     *     {@link Element }
     *     
     */
    public Element getAny() {
        return any;
    }

    /**
     * Sets the value of the any property.
     * 
     * @param value
     *     allowed object is
     *     {@link Element }
     *     
     */
    public void setAny(Element value) {
        this.any = value;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the prefer property.
     * 
     * @return
     *     possible object is
     *     {@link SystemOrPublic }
     *     
     */
    public SystemOrPublic getPrefer() {
        return prefer;
    }

    /**
     * Sets the value of the prefer property.
     * 
     * @param value
     *     allowed object is
     *     {@link SystemOrPublic }
     *     
     */
    public void setPrefer(SystemOrPublic value) {
        this.prefer = value;
    }

    /**
     * Gets a map that contains attributes that aren't bound to any typed property on this class.
     * 
     * <p>
     * the map is keyed by the name of the attribute and 
     * the value is the string value of the attribute.
     * 
     * the map returned by this method is live, and you can add new attribute
     * by updating the map directly. Because of this design, there's no setter.
     * 
     * 
     * @return
     *     always non-null
     */
    public Map<QName, String> getOtherAttributes() {
        return otherAttributes;
    }

}
